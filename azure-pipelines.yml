trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sshEndpoint: 'kijkeerst-ssh'
  deployPath: '/var/www/kijkeerst'
  sshUser: 'your_ssh_user'         # CHANGE THIS
  sshHost: 'your.server.ip'        # CHANGE THIS
  sshKeyPath: '/home/vsts/.ssh/id_rsa'
  rsyncFilterFile: 'rsync-filter.txt'

jobs:
- job: LaravelDeploy
  displayName: 'Deploy Laravel to VPS'
  steps:

  - task: UseNode@1
    inputs:
      version: '18.x'
    displayName: 'Use Node.js 18'

  - script: |
      php -v
      composer install --no-interaction --prefer-dist --optimize-autoloader
    displayName: 'Install PHP Dependencies'

  - script: |
      npm ci
      npm run build
    displayName: 'Build Frontend'

  - script: |
      echo "- /.phpunit.cache" > $(rsyncFilterFile)
      echo "- /node_modules" >> $(rsyncFilterFile)
      echo "- /public/build" >> $(rsyncFilterFile)
      echo "- /public/hot" >> $(rsyncFilterFile)
      echo "- /public/storage" >> $(rsyncFilterFile)
      echo "- /storage/*.key" >> $(rsyncFilterFile)
      echo "- /vendor" >> $(rsyncFilterFile)
      echo "- /.env" >> $(rsyncFilterFile)
      echo "- /.env.*" >> $(rsyncFilterFile)
      echo "- /.phpactor.json" >> $(rsyncFilterFile)
      echo "- /.phpunit.result.cache" >> $(rsyncFilterFile)
      echo "- /Homestead.*" >> $(rsyncFilterFile)
      echo "- /auth.json" >> $(rsyncFilterFile)
      echo "- /npm-debug.log" >> $(rsyncFilterFile)
      echo "- /yarn-error.log" >> $(rsyncFilterFile)
      echo "- /.fleet" >> $(rsyncFilterFile)
      echo "- /.idea" >> $(rsyncFilterFile)
      echo "- /.vscode" >> $(rsyncFilterFile)
    displayName: 'Create rsync ignore filter'

  - script: |
      mkdir -p ~/.ssh
      echo "$SSH_PRIVATE_KEY" > $(sshKeyPath)
      chmod 600 $(sshKeyPath)
    env:
      SSH_PRIVATE_KEY: $(mySSHKey)
    displayName: 'Prepare SSH Key for rsync'

  - script: |
      rsync -az --filter="merge $(rsyncFilterFile)" -e "ssh -i $(sshKeyPath) -o StrictHostKeyChecking=no" ./ $(sshUser)@$(sshHost):$(deployPath)
    displayName: 'Deploy with rsync'

  - task: SSH@0
    inputs:
      sshEndpoint: $(sshEndpoint)
      runOptions: 'inline'
      inline: |
        sudo chown -R www-data:www-data $(deployPath)
        cd $(deployPath)
        php artisan migrate --force
        php artisan storage:link
    displayName: 'Set Permissions and Run Artisan Commands'
